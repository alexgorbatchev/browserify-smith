// Generated by CoffeeScript 1.7.1
var compilers, path, through;

path = require('path');

through = require('through');

compilers = {
  '.js': function(src, filepath, debug, callback) {
    return callback(null, src);
  },
  '.coffee': function(src, filepath, debug, callback) {
    return require('coffee-compiler').fromSource(src, {
      sourceMap: debug,
      filename: filepath,
      bare: true
    }, callback);
  },
  '.less': function(src, filepath, debug, callback) {
    return require('less-compiler').fromSource(src, {
      sourceMap: false,
      filename: filepath
    }, function(err, src) {
      if (src != null) {
        src = "module.exports = " + (JSON.stringify(src));
      }
      return callback(err, src);
    });
  },
  '.jade': function(src, filepath, debug, callback) {
    return require('jade-compiler').fromSource(src, {}, function(err, src) {
      if (src != null) {
        src = "module.exports = " + (JSON.stringify(src));
      }
      return callback(err, src);
    });
  }
};

module.exports = function(filepath) {
  var compiler, data, end, ext, write;
  data = '';
  ext = path.extname(filepath);
  compiler = compilers[ext];
  write = function(chunk) {
    return data += chunk;
  };
  end = function() {
    return compiler(data, filepath, {
      debug: true
    }, (function(_this) {
      return function(err, code) {
        if (err != null) {
          return _this.emit('error', err);
        } else {
          _this.queue(code);
          return _this.queue(null);
        }
      };
    })(this));
  };
  if (compiler) {
    return through(write, end);
  } else {
    return through();
  }
};
